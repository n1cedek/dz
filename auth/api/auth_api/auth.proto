syntax = "proto3";

package auth_api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "github.com/n1cedek/dz/auth/pkg/w1;w1";

service UserAPI{
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/auth/v1/create"
      body: "*"
    };
  }
  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/auth/v1/{id}"
    };
  }
  rpc Update(UpdateRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/auth/v1"
      body: "*"
    };
  }
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/auth/v1"
    };
  }
}

enum Role{
  user = 0;
  admin = 1;
}

message CreateRequest{
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string email = 2;
  string password = 3 [(validate.rules).string = {min_len: 8, max_len: 64}];
  string password_confirm = 4;
  Role role = 5;
}
message CreateResponse{
  int64 id = 1;
}

message GetRequest{
  int64 id = 1;
}
message GetResponse{
  int64 id = 1;
  string name = 2;
  string email = 3;
  Role role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message UpdateRequest{
  int64 id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue email = 3;
}

message DeleteRequest{
  int64 id = 1;
}